on:
  workflow_dispatch:
  push:
    tags:
    - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1

          - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.1.7
          virtualenvs-create: true
          virtualenvs-in-project: false
          virtualenvs-path: ~/.virtualenvs

      - name: Cache Poetry virtualenv
        uses: actions/cache@v2
        id: cache
        with:
          path: ~/.virtualenvs
          key: poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Install Dependencies
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Version & Test Publish
        run: |
          # set version number equal to latest git tag
          poetry version $(git tag | tail -1)
          poetry config repositories.testpypi https://test.pypi.org/legacy/
          poetry publish --build -r testpypi -u __token__ -p ${{ secrets.TEST_PYPI_TOKEN }}

      # - name: Publish
      #   run: |
      #     poetry version $(git tag | tail -1)
      #     poetry publish --build -u __token__ -p ${{ secrets.PYPI_TOKEN }}

      # - name: Create GitHub Release
      #   uses: ncipollo/release-action@v1
      #   with:
      #     artifacts: "dist/*"
      #     bodyFile: "README.md"
      #     token: ${{ secrets.GITHUB_TOKEN }}

          
    